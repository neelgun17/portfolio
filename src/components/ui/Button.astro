---
interface Props {
  size?: 'sm' | 'md' | 'lg';
  block?: boolean;
  href?: string;
  download?: string;
  style?: 'primary';
  class?: string;
  [x: string]: any;
}

const { size = 'md', href = '', download, style = 'primary', block, class: className, ...rest } = Astro.props;

const sizes = {
  sm: 'px-4 py-1.5 text-sm',
  md: 'px-5 py-2.5 text-md',
  lg: 'px-6 py-3 text-lg',
};

const styles = {
  primary: 'bg-black text-white hover:bg-orange  border-2 border-transparent',
};

const buttonBaseClasses = 'rounded-xl text-center transition focus-visible:ring-2 ring-offset-2 ring-orange';
const blockClasses = block ? 'w-full' : '';
const sizeClasses = sizes[size];
const styleClasses = styles[style];
const additionalClasses = className ?? '';
---

{href ? (
  <a
    {...rest}
    href={href}
    download={download}
    class={`${buttonBaseClasses} ${blockClasses} ${sizeClasses} ${styleClasses} ${additionalClasses}`}
  >
    <slot />
  </a>
) : (
  <button
    {...rest}
    class={`${buttonBaseClasses} ${blockClasses} ${sizeClasses} ${styleClasses} ${additionalClasses}`}
  >
    <slot />
  </button>
)}
